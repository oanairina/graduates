/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import src.Accessories;
import src.Animal;
import src.Food;
import src.Order;

/**
 *
 * @author ocapatina
 */
public class CreateOrder extends javax.swing.JFrame {

    private List<Animal> listaAnimale = new ArrayList<Animal>();
    private List<Food> listaFood = new ArrayList<Food>();
    private List<Accessories> listaAccessories = new ArrayList<Accessories>();
    private List<Animal> listaAnimaleSelected = new ArrayList<Animal>();
    private List<Food> listaFoodSelected = new ArrayList<Food>();
    private List<Accessories> listaAccessoriesSelected = new ArrayList<Accessories>();

    public CreateOrder(List<Animal> listaAnimale, List<Food> listaFood, List<Accessories> listaAccessories) {
        initComponents();
        this.listaAnimale = listaAnimale;
        this.listaFood = listaFood;
        this.listaAccessories = listaAccessories;
        loadListPet();
        loadListFood();
        loadListAccessories();
    }

    public List<Animal> selectItemPet() {
        int[] selectedIndices = jListPet.getSelectedIndices();
        List<Animal> selectedPets = new ArrayList<Animal>();
        for (int i = 0; i < listaAnimale.size(); i++) {
            for (int j = 0; j < selectedIndices.length; j++) {
                if (i == selectedIndices[j]) {
                    selectedPets.add(listaAnimale.get(i));
                }
            }
        }
        return selectedPets;
    }

    public List<Food> selectItemFood() {
        int[] selectedIndices = jListFood.getSelectedIndices();
        List<Food> selectedFood = new ArrayList<Food>();
        for (int i = 0; i < listaFood.size(); i++) {
            for (int j = 0; j < selectedIndices.length; j++) {
                if (i == selectedIndices[j]) {
                    selectedFood.add(listaFood.get(i));
                }
            }
        }
        return selectedFood;
    }

    public List<Accessories> selectItemAccessories() {
        int[] selectedIndices = jListAccessories.getSelectedIndices();
        List<Accessories> selectedAccessories = new ArrayList<Accessories>();
        for (int i = 0; i < listaAccessories.size(); i++) {
            for (int j = 0; j < selectedIndices.length; j++) {
                if (i == selectedIndices[j]) {
                    selectedAccessories.add(listaAccessories.get(i));
                }
            }
        }
        return selectedAccessories;
    }

    public void addToOrderPet(List<Animal> listaSelectata) {
        if (listaSelectata != null) {
            List<Animal> selectedPets = selectItemPet();
            if (selectedPets != null && selectedPets.size() > 0) {
                for (int i = 0; i < selectedPets.size(); i++) {
                    jOrder.append(selectedPets.get(i).toString());
                    jOrder.append("\n");
                    listaAnimaleSelected.add(selectedPets.get(i));
                }
            }
        }
    }

    public void addToOrderFood(List<Food> listaSelectata) {

        List<Food> selectedFood = selectItemFood();
        for (int i = 0; i < selectedFood.size(); i++) {
            jOrder.append(selectedFood.get(i).toString());
            jOrder.append("\n");
            listaFoodSelected.add(selectedFood.get(i));
        }
    }

    public void addToOrderAccessories(List<Accessories> listaSelectata) {

        List<Accessories> selectedAccessories = selectItemAccessories();
        for (int i = 0; i < selectedAccessories.size(); i++) {
            jOrder.append(selectedAccessories.get(i).toString());
            jOrder.append("\n");
            listaAccessoriesSelected.add(selectedAccessories.get(i));
        }
    }

    public void loadListPet() {
        DefaultListModel listModel = new DefaultListModel();
        jListPet.removeAll();
        for (Animal a : listaAnimale) {
            listModel.addElement(a);
        }
        jListPet.setModel(listModel);
    }

    public void loadListFood() {
        DefaultListModel listModel = new DefaultListModel();
        jListFood.removeAll();
        for (Food f : listaFood) {
            listModel.addElement(f);
        }
        jListFood.setModel(listModel);
    }

    public void loadListAccessories() {
        DefaultListModel listModel = new DefaultListModel();
        jListAccessories.removeAll();
        for (Accessories ac : listaAccessories) {
            listModel.addElement(ac);
        }
        jListAccessories.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListPet = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListFood = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListAccessories = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jOrder = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jListPet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(153, 153, 255)));
        jScrollPane1.setViewportView(jListPet);

        jListFood.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(153, 204, 255), new java.awt.Color(153, 153, 255)));
        jScrollPane2.setViewportView(jListFood);

        jListAccessories.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(153, 153, 255)));
        jScrollPane3.setViewportView(jListAccessories);

        jLabel1.setText("  FOOD");

        jLabel2.setText("ACCESSORIES");

        jLabel3.setText("  PETS");

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jOrder.setColumns(20);
        jOrder.setRows(5);
        jScrollPane4.setViewportView(jOrder);

        jButton5.setText("Add");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 908, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112)))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(347, 347, 347)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(132, 132, 132))
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jButton3)
                .addGap(286, 286, 286)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(146, 146, 146))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        addToOrderPet(listaAnimale);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        addToOrderFood(listaFood);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        addToOrderAccessories(listaAccessories);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Order order = new Order(listaAnimaleSelected, listaFoodSelected, listaAccessoriesSelected);
        //System.out.println(order.toString());
        BufferedWriter writer = null;
        String fileName = "orders.txt";
        try {
            writer = new BufferedWriter(new FileWriter(fileName));
            writer.write(order.toString());
        } catch (IOException e) {
            System.out.println("An error ocurred while trying to write into " + fileName);
        } finally {
            try {
                if (writer != null) {
                    writer.close();
                }
            } catch (IOException e) {
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jListAccessories;
    private javax.swing.JList jListFood;
    private javax.swing.JList jListPet;
    private javax.swing.JTextArea jOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
